plugins {
  alias(libs.plugins.google.protobuf.plugin)
}

ext {
  VERSION = project.findProperty('version')
  VCS_URL = 'https://github.com/sava-software/geyser'
  GRPC_VERSION = libs.versions.grpc.get()
  PROTOC_VERSION = libs.versions.protoc.get()
}

apply(plugin: 'java-library')
apply(plugin: 'maven-publish')

project.group = 'software.sava'
project.version = "$VERSION"

final JLV = JavaLanguageVersion.of(project.findProperty('javaVersion') as Integer ?: 24)
final GPR_USER = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
final GPR_TOKEN = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")

plugins.withType(JavaPlugin).configureEach {
  java {
    modularity.inferModulePath = true
    toolchain {
      languageVersion = JLV
    }
  }
}

repositories {
  maven {
    url = "https://maven.pkg.github.com/sava-software/sava"
    credentials {
      username = GPR_USER
      password = GPR_TOKEN
    }
  }
  mavenCentral()
}

dependencies {
  implementation libs.bouncycastle
  implementation libs.sava.core

  implementation libs.bundles.grpc.protobuf

  testImplementation libs.junit.jupiter
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// https://github.com/grpc/grpc-java?tab=readme-ov-file#generated-code
protobuf {
  protoc {
    // https://mvnrepository.com/artifact/com.google.protobuf/protoc
    artifact = "com.google.protobuf:protoc:$PROTOC_VERSION"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$GRPC_VERSION"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        option 'jakarta_omit'
        option '@generated=omit'
      }
    }
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
    exceptionFormat = "full"
    showStandardStreams = true
  }
}

tasks.withType(Javadoc).configureEach {
  options.addStringOption('Xdoclint:none', '-quiet')
}

java {
  withJavadocJar()
  withSourcesJar()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      groupId = project.group
      artifactId = project.name
      version = project.version

      pom {
        name = project.name
        description = "Solana gRPC Geyser Client"
        url = "$VCS_URL"
        licenses {
          license {
            name = 'Apache-2.0 license'
            url = 'https://github.com/sava-software/geyser/blob/main/LICENSE'
          }
        }
        developers {
          developer {
            name = 'Jim'
            id = 'jpe7s'
            email = 'jpe7s.salt188@passfwd.com'
            organization = 'Sava Software'
            organizationUrl = 'https://github.com/sava-software'
          }
        }
        scm {
          connection = 'scm:git:git@github.com:sava-software/geyser.git'
          developerConnection = 'scm:git:ssh@github.com:sava-software/geyser.git'
          url = "$VCS_URL"
        }
      }
    }
  }

  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/sava-software/geyser"
      credentials {
        username = System.getenv("GITHUB_ACTOR") ?: project.findProperty("gpr.user.write")
        password = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.token.write")
      }
    }
  }
}
